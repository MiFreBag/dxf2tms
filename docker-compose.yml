version: '3'
services:

  server:
    build: ./server
    ports:
      - "8000:8000"
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/output:/app/output
      - ./server/templates:/app/templates
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - QGIS_PREFIX_PATH=/usr
      - QT_QPA_PLATFORM=offscreen
      - XDG_RUNTIME_DIR=/tmp/runtime-root
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s    

  client:
    build: ./client
    restart: always
    expose:
      - "80"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # KORREKTUR: Die Zeile f√ºr entrypoint.sh wurde entfernt.
      # Das Skript ist bereits im Docker-Image enthalten.
      - ./nginx/ssl:/etc/ssl/private:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    depends_on:
      - server
      - client
    restart: always

  maptiler:
    image: maptiler/engine:latest
    volumes:
      - ./server/output:/data/input:ro
      - ./maptiler-output:/data/output
    environment:
      - MT_KEY=replace-with-your-license
  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_SECURE_COOKIE=false
      - N8N_EDITOR_BASE_URL=https://10.254.64.14/n8n/
      - WEBHOOK_URL=https://10.254.64.14/n8n/
      - N8N_PATH=/n8n/
    volumes:
      - n8n_data:/home/node/.n8n
    restart: always


  tileserver-gl:
    image: maptiler/tileserver-gl
    container_name: tileserver-gl
    volumes:
      - ./server/output:/data:rw
      - ./tileserver:/data
    restart: unless-stopped
    command: ["-p", "80", "-c", "/data/conf.json"]
    ports:
      - "8081:80"

volumes:
  n8n_data:
  uploads:
  output:
